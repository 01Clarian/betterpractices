{"ast":null,"code":"import _defineProperty from \"/Users/mauriceknecht/Desktop/better-practices/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { userInfo } from 'os'; // firebase configuration settings for api key and database etc\n\nconst config = {\n  apiKey: \"AIzaSyDLpWawnIMPizggh0z3jif5MkdqYuN8aEU\",\n  authDomain: \"bp-db-7fbdb.firebaseapp.com\",\n  databaseURL: \"https://bp-db-7fbdb.firebaseio.com\",\n  projectId: \"bp-db-7fbdb\",\n  storageBucket: \"bp-db-7fbdb.appspot.com\",\n  messagingSenderId: \"184900964701\",\n  appId: \"1:184900964701:web:018df24b08d3f7d7f518b4\",\n  measurementId: \"G-MPDYKY5EX6\"\n}; //execute firebase initialization\n\nfirebase.initializeApp(config); // create a new user two parameters - userAuth -\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n  console.log(snapshot);\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email\n      }, additionalData, {\n        createdAt\n      }));\n    } catch {\n      error => console.log(error);\n    }\n  }\n\n  return userRef;\n}; //hook up authorization and the firestore\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //firestore.collection('users').doc('ejzPpPDX53z6AGQKjGa').collection('cartItems').doc('R3bt5KE64OhaV3ZxZFqI')\n//firestore.doc('/users/ejzPpPDX53z6AGQKjGa/cartItems/R3bt5KE64OhaV3ZxZFqI')\n//set up google authorization signin and send to custom button\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); // hook up variable signinwithgoogle to signing in popup from provider\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/firebase/firebase.utils.js"],"names":["firebase","userInfo","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","snapshot","exists","displayName","email","createdAt","Date","set","error","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,IAAzB,C,CAEA;;AACA,MAAMC,MAAM,GAAI;AACZC,EAAAA,MAAM,EAAE,yCADI;AAEZC,EAAAA,UAAU,EAAE,6BAFA;AAGZC,EAAAA,WAAW,EAAE,oCAHD;AAIZC,EAAAA,SAAS,EAAE,aAJC;AAKZC,EAAAA,aAAa,EAAE,yBALH;AAMZC,EAAAA,iBAAiB,EAAE,cANP;AAOZC,EAAAA,KAAK,EAAE,2CAPK;AAQZC,EAAAA,aAAa,EAAE;AARH,CAAhB,C,CAWA;;AACAV,QAAQ,CAACW,aAAT,CAAuBT,MAAvB,E,CAEA;;AACA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AACA,MAAG,CAACJ,QAAQ,CAACK,MAAb,EAAqB;AAAA,UACZC,WADY,GACUZ,QADV,CACZY,WADY;AAAA,UACCC,KADD,GACUb,QADV,CACCa,KADD;AAEnB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMb,OAAO,CAACc,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA;AAFI,SAGDZ,cAHC;AAIJa,QAAAA;AAJI,SAAN;AAMD,KAPD,CAOE,MAAM;AACLG,MAAAA,KAAD,IAAWT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAAX;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CApBM,C,CAqBP;;AACA,OAAO,MAAMgB,IAAI,GAAG/B,QAAQ,CAAC+B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGhB,QAAQ,CAACgB,SAAT,EAAlB,C,CACP;AACA;AAEA;;AACA,MAAMgB,QAAQ,GAAG,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B,E,CACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAehC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore'\nimport 'firebase/auth';\nimport { userInfo } from 'os';\n\n// firebase configuration settings for api key and database etc\nconst config =  {\n    apiKey: \"AIzaSyDLpWawnIMPizggh0z3jif5MkdqYuN8aEU\",\n    authDomain: \"bp-db-7fbdb.firebaseapp.com\",\n    databaseURL: \"https://bp-db-7fbdb.firebaseio.com\",\n    projectId: \"bp-db-7fbdb\",\n    storageBucket: \"bp-db-7fbdb.appspot.com\",\n    messagingSenderId: \"184900964701\",\n    appId: \"1:184900964701:web:018df24b08d3f7d7f518b4\",\n    measurementId: \"G-MPDYKY5EX6\"\n  };\n\n//execute firebase initialization\nfirebase.initializeApp(config);\n\n// create a new user two parameters - userAuth -\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\n  const snapShot = await userRef.get()\n  console.log(snapshot)\n  if(!snapShot.exists) {\n    const {displayName, email} = userAuth\n    const createdAt = new Date()\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        ...additionalData,\n        createdAt\n      })\n    } catch {\n      (error) => console.log(error)\n    }\n  }\n  return userRef\n}\n//hook up authorization and the firestore\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n//firestore.collection('users').doc('ejzPpPDX53z6AGQKjGa').collection('cartItems').doc('R3bt5KE64OhaV3ZxZFqI')\n//firestore.doc('/users/ejzPpPDX53z6AGQKjGa/cartItems/R3bt5KE64OhaV3ZxZFqI')\n \n//set up google authorization signin and send to custom button\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\n// hook up variable signinwithgoogle to signing in popup from provider\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}