{"ast":null,"code":"var _jsxFileName = \"/Users/mauriceknecht/Desktop/better-practices/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { firestore, covertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapShot = null;\n  }\n\n  /// build the snapshot of collections pass in the coverter object to snapshot\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapShot => {\n      const collectionsMap = covertCollectionsSnapShotToMap(snapShot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst MapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, MapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","connect","firestore","covertCollectionsSnapShotToMap","updateCollections","withSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unSubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","get","then","snapShot","collectionsMap","setState","render","match","path","MapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF2B;AAAA,SAMnCC,uBANmC,GAMT,IANS;AAAA;;AAQnC;AACAC,EAAAA,iBAAiB,GAAG;AAAA,UACTT,iBADS,GACY,KAAKU,KADjB,CACTV,iBADS;AAEhB,UAAMW,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEJD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,cAAc,GAAIjB,8BAA8B,CAACgB,QAAD,CAAtD;AACIf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJL;AAKC;;AAEDW,EAAAA,MAAM,GAAG;AAAA,UACEC,KADF,GACW,KAAKT,KADhB,CACES,KADF;AAAA,UAEEZ,OAFF,GAEa,KAAKD,KAFlB,CAEEC,OAFF;AAGT,WACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKY,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGV,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKS,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGV,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA;AAMH;;AA7BsC;;AAgCvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCtB,EAAAA,iBAAiB,EAAEgB,cAAc,IAAIM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport {Route} from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport {connect} from 'react-redux'\nimport {firestore, covertCollectionsSnapShotToMap} from '../../firebase/firebase.utils'\nimport {updateCollections} from '../../redux/shop/shop.actions'\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n\n    state = {\n        loading: true\n    }\n\n    unSubscribeFromSnapShot = null;\n\n    /// build the snapshot of collections pass in the coverter object to snapshot\n    componentDidMount() {\n        const {updateCollections} = this.props;\n        const collectionRef = firestore.collection('collections');\n\n    collectionRef.get().then(snapShot => {\n        const collectionsMap =  covertCollectionsSnapShotToMap(snapShot)\n            updateCollections(collectionsMap)\n            this.setState({loading: false})\n        })\n    }\n\n    render() {\n        const {match} = this.props\n        const {loading} = this.state\n    return (\n    <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} />\n        <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />} />\n    </div>\n)\n} \n}\n\nconst MapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, MapDispatchToProps)(ShopPage); "]},"metadata":{},"sourceType":"module"}