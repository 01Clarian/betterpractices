{"ast":null,"code":"import _defineProperty from \"/Users/mauriceknecht/Desktop/better-practices/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/mauriceknecht/Desktop/better-practices/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mauriceknecht/Desktop/better-practices/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = () => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userInfo = _useState2[0],\n        setUserInfo = _useState2[1];\n\n  const displayName = userInfo.displayName,\n        email = userInfo.email,\n        password = userInfo.password,\n        confirmPassword = userInfo.confirmPassword;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const signUp = this.props.signUp;\n\n    if (password !== confirmPassword) {\n      alert('passwords don\\'t match');\n      return;\n    }\n\n    signUp({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserInfo(_objectSpread({}, userInfo, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","userInfo","setUserInfo","handleSubmit","e","preventDefault","signUp","props","alert","handleChange","event","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {connect} from 'react-redux'\nimport {signUpStart} from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = () => {\n    const [userInfo, setUserInfo] = useState({displayName: '',\n    email: '', password: '', confirmPassword: ''})\n\n const {displayName, email, password, confirmPassword} = userInfo\n   const handleSubmit = async e => {\n        e.preventDefault();\n        const {signUp} = this.props\n\n        if (password !== confirmPassword) {\n            alert('passwords don\\'t match');\n            return;\n           }\n        signUp({displayName, email, password})\n    };\n\n  const  handleChange = event => {\n        const {name, value} = event.target\n        setUserInfo({...userInfo, [name]: value})\n    }\n\n        return(\n            <div className=\"sign-up\">\n                <div className='title'>I do not have an account</div>\n                <span>Sign up with your email and password</span>\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label=\"Display Name\"\n                    required\n                    />\n                    <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label=\"Email\"\n                    required\n                    />\n                    <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label=\"Password\"\n                    required\n                    />\n                    <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label=\"Confirm Password\"\n                    required\n                    />\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </div>\n        )\n    }    \n\nconst mapDispatchToProps = (dispatch) => ({\n    signUp: (userCredentials)=> dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}