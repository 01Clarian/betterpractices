{"ast":null,"code":"import _defineProperty from \"/Users/mauriceknecht/Desktop/better-practices/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ShopActionsTypes from './shop.types';\nconst INITIAL_STATE = {\n  collections: null\n};\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ShopActionsTypes.UPDATE_COLLECTIONS:\n      return _objectSpread({}, state, {\n        collections: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/redux/shop/shop.reducer.js"],"names":["ShopActionsTypes","INITIAL_STATE","collections","shopReducer","state","action","type","UPDATE_COLLECTIONS","payload"],"mappings":";;;;;;AAAA,OAAOA,gBAAP,MAA6B,cAA7B;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,gBAAgB,CAACO,kBAAtB;AACI,+BACOH,KADP;AAEIF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFxB;;AAIJ;AACA,aAAOJ,KAAP;AAPJ;AASH,CAVD;;AAYA,eAAeD,WAAf","sourcesContent":["import ShopActionsTypes from './shop.types'\nconst INITIAL_STATE = {\n    collections: null\n};\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case ShopActionsTypes.UPDATE_COLLECTIONS :\n            return {\n                ...state,\n                collections: action.payload\n            }\n        default :\n        return state \n    }\n};\n\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}