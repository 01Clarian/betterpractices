{"ast":null,"code":"import _defineProperty from \"/Users/mauriceknecht/Desktop/better-practices/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport UserActionTypes from './user.types';\nconst INITIAL_STATE = {\n  currentUser: null,\n  newUser: null,\n  error: null\n}; //set initial state of user to null - in the action of setting current user\n// return currentuser to \"USER from auth\"\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: action.payload,\n        error: null\n      });\n\n    case UserActionTypes.SIGN_UP_SUCCESS:\n      return _objectSpread({}, state, {\n        newUser: action.payload,\n        error: null\n      });\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        newUser: null\n      });\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: null,\n        error: null,\n        newUser: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","newUser","error","userReducer","state","action","type","SIGN_IN_SUCCESS","payload","SIGN_UP_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_FAILURE","SIGN_OUT_SUCCESS"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,IADK;AAElBC,EAAAA,OAAO,EAAE,IAFS;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB,C,CAMA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,eAAe,CAACS,eAArB;AACI,+BACOH,KADP;AAEIJ,QAAAA,WAAW,EAAEK,MAAM,CAACG,OAFxB;AAGIN,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKJ,eAAe,CAACW,eAArB;AACQ,+BACOL,KADP;AAEIH,QAAAA,OAAO,EAAEI,MAAM,CAACG,OAFpB;AAGIN,QAAAA,KAAK,EAAE;AAHX;;AAMP,SAAKJ,eAAe,CAACY,eAArB;AACA,SAAKZ,eAAe,CAACa,gBAArB;AACA,SAAKb,eAAe,CAACc,eAArB;AACG,+BACOR,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACG,OAFlB;AAGIP,QAAAA,OAAO,EAAE;AAHb;;AAKA,SAAKH,eAAe,CAACe,gBAArB;AACI,+BACOT,KADP;AAEAJ,QAAAA,WAAW,EAAE,IAFb;AAGAE,QAAAA,KAAK,EAAE,IAHP;AAIAD,QAAAA,OAAO,EAAE;AAJT;;AAMR;AACA,aAAOG,KAAP;AA9BJ;AAgCH,CAjCD;;AAmCA,eAAeD,WAAf","sourcesContent":["import UserActionTypes from './user.types';\n\nconst INITIAL_STATE = {\n    currentUser: null,\n    newUser: null,\n    error: null,\n}\n\n//set initial state of user to null - in the action of setting current user\n// return currentuser to \"USER from auth\"\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case UserActionTypes.SIGN_IN_SUCCESS :\n            return {\n                ...state,\n                currentUser: action.payload,\n                error: null\n            }\n        case UserActionTypes.SIGN_UP_SUCCESS :\n                return {\n                    ...state,\n                    newUser: action.payload,\n                    error: null\n                }\n\n         case UserActionTypes.SIGN_IN_FAILURE :\n         case UserActionTypes.SIGN_OUT_FAILURE :\n         case UserActionTypes.SIGN_UP_FAILURE :\n            return {\n                ...state,\n                error: action.payload,\n                newUser: null,\n            }               \n            case UserActionTypes.SIGN_OUT_SUCCESS :\n                return {\n                    ...state,\n                currentUser: null,\n                error: null,\n                newUser: null\n                }    \n        default :\n        return state;\n    }\n}\n\nexport default userReducer;\n\n"]},"metadata":{},"sourceType":"module"}