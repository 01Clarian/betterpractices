{"ast":null,"code":"var _jsxFileName = \"/Users/mauriceknecht/Desktop/better-practices/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { selectCollectionFetching, selectIsCollectedLoaded } from '../../redux/shop/shop.selector';\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  /// build the snapshot of collections pass in the coverter object to snapshot\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectCollectionFetching,\n  isCollectionLoaded: selectIsCollectedLoaded\n});\n\nconst MapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, MapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","createStructuredSelector","CollectionPage","connect","fetchCollectionsStartAsync","withSpinner","selectCollectionFetching","selectIsCollectedLoaded","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","MapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAAQC,wBAAR,EAAkCC,uBAAlC,QAAgE,gCAAhE;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMU,yBAAyB,GAAGJ,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAInC;AACAC,EAAAA,iBAAiB,GAAG;AAAA,UACTR,0BADS,GACqB,KAAKS,KAD1B,CACTT,0BADS;AAEhBA,IAAAA,0BAA0B;AAC7B;;AAEDU,EAAAA,MAAM,GAAG;AAAA,wBACqD,KAAKD,KAD1D;AAAA,UACEE,KADF,eACEA,KADF;AAAA,UACSC,oBADT,eACSA,oBADT;AAAA,UAC+BC,kBAD/B,eAC+BA,kBAD/B;AAET,WACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAAjB;AACA,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKE,KAAK,CAACG,IAAX,mBAAX;AACA,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAA+DJ,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADA;AASH;;AArBsC;;AAwBvC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAEV,wBADuB;AAE7CW,EAAAA,kBAAkB,EAAEV;AAFyB,CAAD,CAAhD;;AAKA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,0BAA0B,EAAE,MAAKiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport {Route} from 'react-router-dom';\nimport {createStructuredSelector} from 'reselect';\nimport CollectionPage from '../collection/collection.component';\nimport {connect} from 'react-redux'\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions'\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport {selectCollectionFetching, selectIsCollectedLoaded} from '../../redux/shop/shop.selector';\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n\n   \n\n    /// build the snapshot of collections pass in the coverter object to snapshot\n    componentDidMount() {\n        const {fetchCollectionsStartAsync} = this.props\n        fetchCollectionsStartAsync()\n    }\n\n    render() {\n        const {match, isCollectionFetching, isCollectionLoaded} = this.props\n    return (\n    <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} \n        render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\n        \n        <Route path={`${match.path}/:collectionId`} \n        render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionLoaded} {...props} />} />\n    </div>\n)\n} \n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectCollectionFetching,\n    isCollectionLoaded: selectIsCollectedLoaded\n})\n\nconst MapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: ()=> dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProps, MapDispatchToProps)(ShopPage); "]},"metadata":{},"sourceType":"module"}