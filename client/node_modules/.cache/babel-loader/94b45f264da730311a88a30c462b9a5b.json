{"ast":null,"code":"var _jsxFileName = \"/Users/mauriceknecht/Desktop/better-practices/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport './sign-in.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            value = _e$target.value,\n            name = _e$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"I Already Have An Account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"emal\",\n      value: this.state.email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","state","email","password","signInWithEmailAndPassword","setState","error","console","log","handleChange","target","value","name","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport './sign-in.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {auth, signInWithGoogle} from '../../firebase/firebase.utils';\nimport {googleSignInStart} from '../../redux/user/user.actions';\nimport {connect} from 'react-redux'\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault();\n        const {email, password} =this.state;\n\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password)\n            this.setState({email: '', password: ''})\n        } catch (error) { console.log(error);\n    }\n}\n\n    handleChange = (e) => {\n    const {value, name} = e.target;\n\n    this.setState({[name]: value})\n    }\n\n    render() {\n        const {googleSignInStart} = this.props\n        return (\n        <div className=\"sign-in\">\n            <h2>I Already Have An Account</h2>\n            <span>Sign in with your email and password</span>\n        \n        <form onSubmit={this.handleSubmit}>\n            <FormInput name='email' type='emal' value={this.state.email} \n            required\n            handleChange={this.handleChange}\n            label=\"email\"\n            />\n\n            <FormInput name='password' type='password' value={this.state.password} \n            required handleChange={this.handleChange}\n            label=\"password\" />\n            <div className='buttons'>\n            <CustomButton type=\"submit\">Sign in</CustomButton>\n            <CustomButton \n            type=\"button\" \n            onClick={googleSignInStart} \n            isGoogleSignIn >Sign in with Google</CustomButton>\n      </div>\n        </form>\n        \n        </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart())\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn); "]},"metadata":{},"sourceType":"module"}