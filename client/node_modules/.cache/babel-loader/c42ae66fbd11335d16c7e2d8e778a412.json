{"ast":null,"code":"import _defineProperty from \"/Users/mauriceknecht/Desktop/better-practices/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure } from './user.actions';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    put(SignInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInSuccess","SignInFailure","getSnapShotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas","onCheckUserSession","CHECK_USER_SESSION"],"mappings":";;;;;;AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,EACAC,cADA,QACqB,+BADrB;AAGA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC/C,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BK,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACQ,aAAa;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAAnB,OAA0BF,YAAY,CAACG,IAAb,EAA1B,EAAd,CAAT;AACH,GAJD,CAII,OAAMC,KAAN,EAAa;AACb,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AAAA,iBACe,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CADrB;AAAA,UACOe,IADP,QACOA,IADP;;AAEA,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGI,OAAMH,KAAN,EAAa;AACb,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAI;AAAA,kBACe,MAAMpB,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACOJ,IADP,SACOA,IADP;;AAEA,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGE,OAAMH,KAAN,EAAa;AACPjB,IAAAA,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAH;AACP;AACJ;AAED,OAAO,UAAUS,mBAAV,GAAgC,CAEtC;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,kBAAV,GAA+B;AAClC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAqCT,eAArC,CAAhB;AACH;AAGD,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,EAA2BzB,IAAI,CAAC2B,kBAAD,CAA/B,CAAD,CAAT;AACH;AAED,OAAO,UAAUG,kBAAV,GAA+B;AAClC,QAAMjC,UAAU,CAACI,eAAe,CAAC8B,kBAAjB,EAAqCP,mBAArC,CAAhB;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types';\n\nimport {auth, googleProvider, createUserProfileDocument,\ngetCurrentUser} from '../../firebase/firebase.utils';\n\nimport {SignInSuccess, SignInFailure} from './user.actions'\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth)\n        const userSnapshot = yield userRef.get();\n        yield put(SignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    }   catch(error) {\n        yield put(SignInFailure(error))\n    } \n}\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider)\n        yield getSnapShotFromUserAuth(user)\n    }   catch(error) {\n        yield put(SignInFailure(error))\n    } \n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\n        yield getSnapShotFromUserAuth(user)\n    } catch(error) {\n            put(SignInFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated() {\n\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\n}\n\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}"]},"metadata":{},"sourceType":"module"}