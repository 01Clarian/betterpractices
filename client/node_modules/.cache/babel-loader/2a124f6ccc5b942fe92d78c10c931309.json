{"ast":null,"code":"var _jsxFileName = \"/Users/mauriceknecht/Desktop/better-practices/src/pages/collection/collection.component.js\";\nimport React, { useEffect } from 'react';\nimport './collection.styles.scss';\nimport { selectCollection } from '../../redux/shop/shop.selector';\nimport { connect } from 'react-redux';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport { firestore } from '../../firebase/firebase.utils';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    console.log('i am subscibing');\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      console.log('i am unsubscribed');\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const title = collection.title,\n        items = collection.items;\n  console.log(collection);\n  return React.createElement(\"div\", {\n    className: \"collection-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))));\n}; //ownprops is the second parameter - gives all of the props we're getting\n// on our collection page component\n\n\nconst MapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(MapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/pages/collection/collection.component.js"],"names":["React","useEffect","selectCollection","connect","CollectionItem","firestore","CollectionPage","collection","console","log","unsubscribeFromCollections","onSnapshot","snapshot","title","items","map","item","id","MapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,0BAAP;AACA,SAAQC,gBAAR,QAA+B,gCAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,4DAA3B;AACA,SAAQC,SAAR,QAAwB,+BAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AACrCN,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACJ,UAAMC,0BAA0B,GAAGL,SAAS,CAACE,UAAV,CAAqB,aAArB,EAAoCI,UAApC,CAA+CC,QAAQ,IAAIJ,OAAO,CAACC,GAAR,CAAYG,QAAZ,CAA3D,CAAnC;AACA,WAAO,MAAM;AACTJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAC,MAAAA,0BAA0B;AAC7B,KAHD;AAIH,GAPY,EAOX,EAPW,CAAT;AADqC,QAU9BG,KAV8B,GAUdN,UAVc,CAU9BM,KAV8B;AAAA,QAUvBC,KAVuB,GAUdP,UAVc,CAUvBO,KAVuB;AAWrCN,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBM,KAAvB,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAClB,IAAA,IAAI,EAAED,IADY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAFR,CAFJ,CADA;AAUF,CAtBF,C,CAwBA;AACA;;;AACA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1Cb,EAAAA,UAAU,EAAEL,gBAAgB,CAACkB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AAD8B,CAAtB,CAAxB;;AAIA,eAAehB,OAAO,CAACe,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport './collection.styles.scss';\nimport {selectCollection} from '../../redux/shop/shop.selector'\nimport {connect} from 'react-redux';\nimport CollectionItem from '../../components/collection-item/collection-item.component'\nimport {firestore} from '../../firebase/firebase.utils'\n\nconst CollectionPage = ({collection}) => {\n    useEffect(()=>{\n        console.log('i am subscibing')\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot))\n    return () => {\n        console.log('i am unsubscribed')\n        unsubscribeFromCollections()\n    }\n},[])\n\n    const {title, items} = collection;\n    console.log(collection)\n    return (\n    <div className='collection-page'>\n        <h2 className='title'>{title}</h2>\n        <div className='items' >\n            {\n                items.map(item => <CollectionItem key={item.id}\n                item={item}/>)\n            }\n        </div>\n    </div>\n)}\n\n//ownprops is the second parameter - gives all of the props we're getting\n// on our collection page component\nconst MapStateToProps = (state, ownProps) => ({\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n})\n\nexport default connect(MapStateToProps)(CollectionPage)\n\n"]},"metadata":{},"sourceType":"module"}