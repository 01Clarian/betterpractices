{"ast":null,"code":"import _defineProperty from \"/Users/mauriceknecht/Desktop/better-practices/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions'; // getting in sign in from firebase\n\nexport function* getSnapShotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n} // sign in with google\n\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield console.log(user);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    // destructuring create user from auth.signIn\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    put(SignInFailure(error));\n  }\n} // check if user is authenticated\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n} // sign the user out\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\nexport function* signUpUser({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpUser);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapShotFromUserAuth(user, additionalData);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapShotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","console","log","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUpUser","displayName","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","signInAfterSignUp","userSagas"],"mappings":";;;;;;AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,EACAC,cADA,QACqB,+BADrB;AAGA,SAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,cAAtC,EAAsDC,cAAtD,EACAC,aADA,EACeC,aADf,QACmC,gBADnC,C,CAGA;;AACA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,cAA5C,EAA4D;AAC/D,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMf,IAAI,CAACI,yBAAD,EAA4BS,QAA5B,EAAsCC,cAAtC,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CAACQ,aAAa;AAAEY,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAAnB,OAA0BF,YAAY,CAACG,IAAb,EAA1B,EAAd,CAAT;AACH,GAJD,CAII,OAAMC,KAAN,EAAa;AACb,UAAMtB,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAT;AACH;AACJ,C,CAED;;AACA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AAAA,iBACe,MAAMnB,IAAI,CAACoB,eAAL,CAAqBnB,cAArB,CADrB;AAAA,UACOoB,IADP,QACOA,IADP;;AAEA,UAAMC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAN;AACA,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AACH,GAJD,CAIE,OAAOH,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACa,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAGD,OAAO,UAAUM,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAI;AACA;AADA,kBAEe,MAAM3B,IAAI,CAAC4B,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAFrB;AAAA,UAEON,IAFP,SAEOA,IAFP;;AAGA,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AACH,GAJD,CAIE,OAAMH,KAAN,EAAa;AACPtB,IAAAA,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAH;AACP;AACJ,C,CAED;;AACA,OAAO,UAAUW,mBAAV,GAAgC;AACnC,MAAI;AACA,UAAMlB,QAAQ,GAAG,MAAMR,cAAc,EAArC;AACA,QAAG,CAACQ,QAAJ,EAAc;AACd,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACH,GAJD,CAIE,OAAMO,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAT;AACH;AACJ,C,CAED;;AACA,OAAO,UAAWY,OAAX,GAAqB;AAC5B,MAAI;AACA,UAAM9B,IAAI,CAAC8B,OAAL,EAAN;AACA,UAAMlC,GAAG,CAACU,cAAc,EAAf,CAAT;AACH,GAHD,CAGE,OAAMY,KAAN,EAAa;AACXtB,IAAAA,GAAG,CAACW,cAAc,CAACW,KAAD,CAAf,CAAH;AACH;AACA;AAED,OAAO,UAAUa,UAAV,CAAqB;AAACN,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBK,IAAAA;AAAlB;AAAV,CAArB,EAAgE;AACnE,MAAI;AAAA,kBACe,MAAMhC,IAAI,CAACiC,8BAAL,CACjBP,KADiB,EAEjBC,QAFiB,CADrB;AAAA,UACMN,IADN,SACMA,IADN;;AAKF,UAAMzB,GAAG,CAACY,aAAa,CAAC;AAACa,MAAAA,IAAD;AAAOT,MAAAA,cAAc,EAAE;AAACoB,QAAAA;AAAD;AAAvB,KAAD,CAAd,CAAT;AACC,GANH,CAMI,OAAMd,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACa,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAEH,OAAO,UAAUgB,mBAAV,GAAgC;AACnC,QAAMvC,UAAU,CAACI,eAAe,CAACoC,oBAAjB,EAAuChB,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUiB,kBAAV,GAA+B;AAClC,QAAMzC,UAAU,CAACI,eAAe,CAACsC,mBAAjB,EAAqCb,eAArC,CAAhB;AACH;AAGD,OAAO,UAAUc,kBAAV,GAA+B;AAClC,QAAM3C,UAAU,CAACI,eAAe,CAACwC,kBAAjB,EAAqCV,mBAArC,CAAhB;AACH;AAED,OAAO,UAAUW,cAAV,GAA2B;AAC9B,QAAM7C,UAAU,CAACI,eAAe,CAAC0C,cAAjB,EAAiCX,OAAjC,CAAhB;AACH;AAED,OAAO,UAAUY,aAAV,GAA0B;AAC7B,QAAM/C,UAAU,CAACI,eAAe,CAAC4C,aAAjB,EAAgCZ,UAAhC,CAAhB;AACH;AAED,OAAO,UAAUa,eAAV,GAA4B;AAC/B,QAAMjD,UAAU,CAACI,eAAe,CAAC8C,eAAjB,EACZC,iBADY,CAAhB;AAEH;AAED,OAAO,UAAUA,iBAAV,CAA4B;AAACrB,EAAAA,OAAO,EAAE;AAACJ,IAAAA,IAAD;AAAOT,IAAAA;AAAP;AAAV,CAA5B,EAA+D;AAClE,QAAMF,uBAAuB,CAACW,IAAD,EAAOT,cAAP,CAA7B;AACH;AAGD,OAAO,UAAUmC,SAAV,GAAsB;AACzB,QAAMlD,GAAG,CAAC,CAACC,IAAI,CAACoC,mBAAD,CAAL,EACCpC,IAAI,CAACsC,kBAAD,CADL,EAEEtC,IAAI,CAAC+B,mBAAD,CAFN,EAGE/B,IAAI,CAAC0C,cAAD,CAHN,EAIE1C,IAAI,CAAC4C,aAAD,CAJN,EAKF5C,IAAI,CAAC8C,eAAD,CALF,CAAD,CAAT;AAMH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types';\n\nimport {auth, googleProvider, createUserProfileDocument,\ngetCurrentUser} from '../../firebase/firebase.utils';\n\nimport {SignInSuccess, SignInFailure, signOutSuccess, signOutFailure,\nsignUpSuccess, signUpFailure} from './user.actions'\n\n// getting in sign in from firebase\nexport function* getSnapShotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData)\n        const userSnapshot = yield userRef.get();\n        yield put(SignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    }   catch(error) {\n        yield put(SignInFailure(error))\n    } \n}\n\n// sign in with google\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider)\n        yield console.log(user)\n        yield getSnapShotFromUserAuth(user)\n    } catch (error) {\n        yield put(signUpFailure(error))\n    }\n}\n\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try {\n        // destructuring create user from auth.signIn\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\n        yield getSnapShotFromUserAuth(user)\n    } catch(error) {\n            put(SignInFailure(error))\n    }\n}\n\n// check if user is authenticated\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser()\n        if(!userAuth) return;\n        yield getSnapShotFromUserAuth(userAuth)\n    } catch(error) {\n        yield put(SignInFailure(error));\n    }\n}\n\n// sign the user out\nexport function*  signOut() {\ntry {\n    yield auth.signOut()\n    yield put(signOutSuccess())\n} catch(error) {\n    put(signOutFailure(error))\n}\n}\n\nexport function* signUpUser({payload: {email, password, displayName}}) { \n    try {\n      const { user } = yield auth.createUserWithEmailAndPassword(\n            email, \n            password\n    );\n      yield put(signUpSuccess({user, additionalData: {displayName}}));\n      } catch(error) {\n          yield put(signUpFailure(error))\n      }\n  }\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\n}\n\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUpUser)\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,\n        signInAfterSignUp)\n}\n\nexport function* signInAfterSignUp({payload: {user, additionalData}}) {\n    yield getSnapShotFromUserAuth(user, additionalData)\n}\n\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart),\n               call(onEmailSignInStart), \n                call(isUserAuthenticated),\n                call(onSignOutStart),\n                call(onSignUpStart),\n            call(onSignUpSuccess)])\n} "]},"metadata":{},"sourceType":"module"}