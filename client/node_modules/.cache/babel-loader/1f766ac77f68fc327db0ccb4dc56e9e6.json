{"ast":null,"code":"var _jsxFileName = \"/Users/mauriceknecht/Desktop/better-practices/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport selectCurrentUser from './redux/user/user.selector';\nimport HomePage from './pages/homepages/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\nimport { createStructuredSelector } from 'reselect';\nimport { checkUserSession } from './redux/user/user.actions';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const checkUserSession = this.props.checkUserSession;\n    checkUserSession(); // if there is user authorization create user profile...\n    //  this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    ///  if(userAuth) {\n    ///   const userRef = await createUserProfileDocument(userAuth)\n    //set state to id and the data\n    //   userRef.onSnapshot(snapShot => {\n    //    setCurrentUser({\n    //     currentUser: {\n    //      id: snapShot.id,\n    //     ...snapShot.data()\n    //    }\n    //  }) \n    //  });\n    //}\n    //if there isn't user authorization set state\n    //  setCurrentUser(userAuth);\n    //  })\n  } // sigout unsubscribe auto when lifecycle changes\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); // setting the current user to user\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/App.js"],"names":["React","Switch","Route","Redirect","connect","selectCurrentUser","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","Header","createStructuredSelector","checkUserSession","App","Component","unsubscribeFromAuth","componentDidMount","props","componentWillUnmount","render","currentUser","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,iBAAP,MAA8B,4BAA9B;AAEA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AAEA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,SAAQC,gBAAR,QAA+B,2BAA/B;AAEA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG;AAAA,UACXJ,gBADW,GACS,KAAKK,KADd,CACXL,gBADW;AAElBA,IAAAA,gBAAgB,GAFE,CAGlB;AACF;AACA;AACC;AACG;AACH;AACA;AACC;AACC;AACC;AACD;AACA;AACD;AACA;AAEA;AACF;AACA;AAEC,GAzB+B,CA0B9B;;;AACFM,EAAAA,oBAAoB,GAAG;AACrB,SAAKH,mBAAL;AACD;;AAEHI,EAAAA,MAAM,GAAE;AAAG,WACP;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEb,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEE,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AACA,MAAA,MAAM,EAAE,MACR,KAAKQ,KAAL,CAAWG,WAAX,GACA,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,GACyB,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CAFF,CADJ,CADO;AAmBV;;AAlDiC;;AAoDlC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,gBAAgB,EAAE,MAAMU,QAAQ,CAACV,gBAAgB,EAAjB;AADQ,CAAf,CAA3B;;AAIA,MAAMW,eAAe,GAAGZ,wBAAwB,CAAE;AAChDS,EAAAA,WAAW,EAAEf;AADmC,CAAF,CAAhD,C,CAIA;;AAGA,eAAeD,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CR,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport selectCurrentUser from './redux/user/user.selector';\n\nimport HomePage from './pages/homepages/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nimport Header from './components/header/header.component';\n\nimport {createStructuredSelector} from 'reselect';\n\nimport {checkUserSession} from './redux/user/user.actions'\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null \n \n  componentDidMount() {\n    const {checkUserSession} = this.props\n    checkUserSession()\n    // if there is user authorization create user profile...\n  //  this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  ///  if(userAuth) {\n   ///   const userRef = await createUserProfileDocument(userAuth)\n      //set state to id and the data\n   //   userRef.onSnapshot(snapShot => {\n   //    setCurrentUser({\n    //     currentUser: {\n     //      id: snapShot.id,\n      //     ...snapShot.data()\n     //    }\n     //  }) \n    //  });\n    //}\n\n    //if there isn't user authorization set state\n  //  setCurrentUser(userAuth);\n  //  })\n    \n  }\n    // sigout unsubscribe auto when lifecycle changes\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  \nrender(){  return (\n    <div className=\"App\">\n        <div>\n          <Header  />\n          <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route path=\"/checkout\" component={CheckoutPage} />\n          <Route exact path='/signin' \n          render={()=> \n          this.props.currentUser ? (\n          <Redirect to='/' /> ) : (<SignInAndSignUpPage />\n            )\n          }  \n          />\n          </Switch>\n        </div>\n    </div>\n  );\n}}\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkUserSession: () => dispatch(checkUserSession())\n})\n\nconst mapStateToProps = createStructuredSelector ({\n  currentUser: selectCurrentUser\n})\n\n// setting the current user to user\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}