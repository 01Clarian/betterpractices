{"ast":null,"code":"import _defineProperty from \"/Users/mauriceknecht/Desktop/better-practices/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/mauriceknecht/Desktop/better-practices/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mauriceknecht/Desktop/better-practices/src/components/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport './sign-in.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"I Already Have An Account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"emal\",\n    value: email,\n    required: true,\n    handleChange: handleChange,\n    label: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    handleChange: handleChange,\n    label: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/better-practices/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","email","password","userCredentials","setCredentials","handleSubmit","e","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport './sign-in.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\nimport {connect} from 'react-redux'\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n const [userCredentials, setCredentials] = useState({email: '', password: ''})   \n\n const {email, password} = userCredentials\n\n  const  handleSubmit = async e => {\n        e.preventDefault();\n        emailSignInStart(email, password)\n}\n\n   const handleChange = (e) => {\n    const {value, name} = e.target;\n\n    setCredentials({...userCredentials, [name]: value})\n    }\n        return (\n        <div className=\"sign-in\">\n            <h2>I Already Have An Account</h2>\n            <span>Sign in with your email and password</span>\n        \n        <form onSubmit={handleSubmit}>\n            <FormInput name='email' type='emal' value={email} \n            required\n            handleChange={handleChange}\n            label=\"email\"\n            />\n\n            <FormInput name='password' type='password' value={password} \n            required handleChange={handleChange}\n            label=\"password\" />\n            <div className='buttons'>\n            <CustomButton type=\"submit\">Sign in</CustomButton>\n            <CustomButton \n            type=\"button\" \n            onClick={googleSignInStart} \n            isGoogleSignIn >Sign in with Google</CustomButton>\n      </div>\n        </form>\n        \n        </div>\n        )\n    }\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password)=> dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn); "]},"metadata":{},"sourceType":"module"}